name: Publish

on:
  push:
    branches:
      - main
      - 'release/**'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true   # Stop wasting time caching packages
  DOTNET_CLI_TELEMETRY_OPTOUT: true         # Disable sending usage data to Microsoft
  IMAGE_NAME: vrenken/cryptomagic

jobs:
  publish:

    runs-on: ubuntu-latest
    #runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis - also needed by NBGV

        # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.302

        # Versioning.
      - name: Versioning
        uses: dotnet/nbgv@master
        id: nbgv

      - name: Restore dependencies
        run: dotnet restore 
      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Publish
        run: dotnet publish -c Release --no-build

      - name: Docker build
        run: docker build -t ${{ env.IMAGE_NAME }} -f ./EtAlii.CryptoMagic/Dockerfile .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build
        if: github.ref != 'refs/heads/main'
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.VersionMajor }}
          docker push ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.VersionMajor }}
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.MajorMinorVersion }}
          docker push ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.MajorMinorVersion }}
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.SimpleVersion }}
          docker push ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.SimpleVersion }}

      - name: Docker build for main branch
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.SemVer2 }}
          docker push ${{ env.IMAGE_NAME }}:${{ steps.nbgv.outputs.SemVer2 }}
          
