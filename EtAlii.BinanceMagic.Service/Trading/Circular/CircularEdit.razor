@page "/circular/edit/{id?}"

@inject AlgorithmManager _algorithmManager
@inject NavigationManager _navigationManager

@inject IJSRuntime _jsRuntime;

<Row>
    <Column ColumnSize="ColumnSize.IsFull.OnMobile.IsHalf.OnTablet">
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>@(Id == null ? "Add new circular trade" : "Edit circular trade")</CardTitle>
            </CardHeader>
                <Validations @ref="_validations" Mode="ValidationMode.Auto" ValidateOnLoad="false" EditContext="@_editContext">
                    <CardBody>
                        <Validation Validator="@ValidationRule.IsNotEmpty">
                            <Field>
                                <FieldLabel>Name</FieldLabel>
                                <FieldBody>
                                    <TextEdit 
                                        Placeholder="Enter name" 
                                        Autofocus="true"
                                        @bind-Text="@_model.Name">
                                        <Feedback>
                                            <ValidationError>Enter name for trade.</ValidationError>
                                        </Feedback>                            
                                    </TextEdit>
                                </FieldBody>
                                @* <FieldHelp>A name that represents the circular trade.</FieldHelp> *@
                            </Field>
                        </Validation>
                        <Validation Validator="@ValidationRule.IsNotEmpty">
                            <Field>
                                <FieldLabel>Connectivity</FieldLabel>
                                <FieldBody>
                                    <RadioGroup TValue="string" @bind-CheckedValue="@_model.Connectivity">
                                        <Radio TValue="string" Value="@("BackTest")">Backtest</Radio>
                                        <Radio TValue="string" Value="@("Binance")">Interact with Binance</Radio>
                                    </RadioGroup>
                                </FieldBody>
                            </Field>
                        </Validation>
                        <Button Color="Color.Primary" Clicked="@Submit">Save</Button>
                    </CardBody>
            </Validations>
        </Card>
    </Column>
</Row>
@* <div class="card m-2"> *@
@*     <h4 class="card-header">General settings</h4> *@
@*     <div class="card-body"> *@
@*         <EditForm EditContext="@_editContext" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset"> *@
@*             <DataAnnotationsValidator /> *@
@*             <div class="form-row"> *@
@*                 <div class="form-group col-5"> *@
@*                     <label>Name</label> *@
@*                     <InputText @bind-Value="_model.Name" class="form-control" /> *@
@*                     <ValidationMessage For="@(() => _model.Name)" /> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="text-l-center"> *@
@*                 <button type="submit" class="btn btn-primary mr-1">Save</button> *@
@*                 $1$ <button type="reset" class="btn btn-secondary">Cancel</button> #1# *@
@*             </div> *@
@*         </EditForm> *@
@*     </div> *@
@* </div> *@
@* *@
