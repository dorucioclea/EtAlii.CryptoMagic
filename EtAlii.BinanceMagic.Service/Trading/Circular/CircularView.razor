@page "/circular/view/{id?}"

@namespace EtAlii.BinanceMagic.Service

@inherits ViewBase<CircularTrading, CircularAlgorithmRunner>

<Row Margin="Margin.Is4">
    <Column ColumnSize="ColumnSize.Is1">
        <Blazorise.Button Color="Color.Primary" Type="ButtonType.Link" Size="Size.Small">
            <Icon Name="IconName.Pause" />
            Pause
        </Blazorise.Button>
    </Column>
    <Column ColumnSize="ColumnSize.Is1">
        <Blazorise.Button Color="Color.Secondary" Type="ButtonType.Link" To="@($"/circular/edit/{Id}")" Size="Size.Small">
            <Icon Name="@("fa-wrench")"/>
            Change
        </Blazorise.Button>
    </Column>
</Row>
<Row Margin="Margin.Is4">
    <Column ColumnSize="ColumnSize.Is4.OnDesktop.IsAuto.OnTablet">
        <Card>
            <CardHeader>@Model.Name</CardHeader>
            <Table Striped="false" Borderless="true" Narrow="true">
                <TableBody>
                    <TableRow>
                        <TableRowCell>Last success: </TableRowCell><TableRowCell>@LastSuccess</TableRowCell>
                        <TableRowCell>Profit:</TableRowCell><TableRowCell>@Current.Profit</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Next check: </TableRowCell><TableRowCell>@NextCheck</TableRowCell>
                        <TableRowCell>Step:</TableRowCell><TableRowCell>@Current.Step</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Result:</TableRowCell><TableRowCell ColumnSpan="3">@Current.Result</TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>
        </Card>        
    </Column>
    <Column ColumnSize="ColumnSize.Is8.OnDesktop.IsAuto.OnTablet">
        <Card>
            <CardHeader>Current cycle</CardHeader>
            <Table Striped="false" Borderless="true" Narrow="true">
                <TableBody>
                    <TableRow>
                        <TableRowCell>Sell: </TableRowCell><TableRowCell>@Decimal(Current.SellPrice, "+") @Current.ReferenceSymbol</TableRowCell>
                        <TableRowCell>Quantity: </TableRowCell><TableRowCell>@Decimal(Current.SellQuantity, "+") @Current.SellSymbol</TableRowCell>
                        <TableRowCell>Trend: </TableRowCell><TableRowCell><span style="@SellTrendStyle">@DecimalShort(Current.SellTrend)</span></TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Buy: </TableRowCell><TableRowCell>@Decimal(Current.BuyPrice, "-") @Current.ReferenceSymbol</TableRowCell>
                        <TableRowCell>Quantity: </TableRowCell><TableRowCell>@Decimal(Current.BuyQuantity, "-") @Current.BuySymbol</TableRowCell>
                        <TableRowCell>Trend: </TableRowCell><TableRowCell><span style="@BuyTrendStyle">@DecimalShort(Current.BuyTrend)</span></TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Diff: </TableRowCell><TableRowCell><span style="@DifferenceStyle">@Decimal(Current.Difference) @Current.ReferenceSymbol</span></TableRowCell>
                        <TableRowCell>Target: </TableRowCell><TableRowCell>@Decimal(Current.Target, "+") @Current.ReferenceSymbol</TableRowCell>
                        <TableRowCell></TableRowCell><TableRowCell></TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>
        </Card>        
    </Column>
</Row>

<Row Margin="Margin.Is4">
    <Column ColumnSize="ColumnSize.Is8.OnDesktop.IsAuto.OnTablet">
        <Card>
            <CardHeader>Log</CardHeader>
            <CardBody>@CurrentRunnerLog</CardBody>
        </Card>        
    </Column>
</Row>
