@page "/circular/view/{id?}"

@namespace EtAlii.BinanceMagic.Service

@inherits ViewBase<CircularTransaction, CircularTrading, CircularAlgorithmRunner>

<Heading Margin="DefaultLayout.Margin">@Model.Name</Heading>

<Row Margin="DefaultLayout.Margin">
    <Column ColumnSize="ColumnSize.Is1">
        <Blazorise.Button Color="Color.Primary" Type="ButtonType.Link" Size="Size.Small">
            <Icon Name="IconName.Pause" />
            Pause
        </Blazorise.Button>
    </Column>
    <Column ColumnSize="ColumnSize.Is1">
        <Blazorise.Button Color="Color.Secondary" Type="ButtonType.Link" To="@($"/circular/edit/{Id}")" Size="Size.Small">
            <Icon Name="@("fa-wrench")"/>
            Change
        </Blazorise.Button>
    </Column>
</Row>
<Row Margin="DefaultLayout.Margin">
    <Column ColumnSize="ColumnSize.Is4.OnDesktop.IsAuto.OnTablet">
        <Card>
            <CardHeader>Summary</CardHeader>
            <Table Striped="false" Borderless="true" Narrow="true">
                <TableBody>
                    <TableRow>
                        <TableRowCell>Last success:</TableRowCell><TableRowCell>@CurrentRunner.Context.CurrentTransaction?.LastSuccess.ToHtml("None")</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Next check:</TableRowCell><TableRowCell>@CurrentRunner.Context.CurrentTransaction?.NextCheck.ToHtml("Now")</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Step:</TableRowCell><TableRowCell>@Current?.Step</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Profit:</TableRowCell><TableRowCell>@($"{CurrentRunner.Context.Trading.TotalProfit:0.00} {CurrentRunner.Context.Trading.ReferenceSymbol}")</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>Result:</TableRowCell><TableRowCell>@Current?.Result</TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>
        </Card>        
    </Column>
</Row>

@if (CurrentRunner.Context.CurrentTransaction != null)
{
    <Row Margin="DefaultLayout.Margin">
        <Column ColumnSize="ColumnSize.Is11.OnDesktop.IsAuto.OnTablet">
            <CircularTransactionCard 
                Title="Current cycle" 
                Transaction="@CurrentRunner.Context.CurrentTransaction"
                Trading="@CurrentRunner.Context.Trading"/>
        </Column>    
    </Row>
}

<Repeater Items="@History">
    <Row Margin="DefaultLayout.Margin">
        <Column ColumnSize="ColumnSize.Is11.OnDesktop.IsAuto.OnTablet">
            <CircularTransactionCard 
                Title="@($"Cycle {context.LastSuccess}")" 
                Transaction="@context" 
                Trading="@CurrentRunner.Context.Trading"/>
        </Column>
    </Row>
</Repeater>

@if (CurrentRunner.Context.Trading.TradeMethod == TradeMethod.BackTest)
{
    <Row Margin="DefaultLayout.Margin">
        <Column ColumnSize="ColumnSize.Is11.OnDesktop.IsAuto.OnTablet">
            <Card>
                <CardHeader>Backtest startup</CardHeader>
                <CardBody>@((MarkupString)CurrentRunner.Log)</CardBody>
            </Card>
        </Column>
    </Row>
}